name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Run lint, type checks and tests
        run: yarn verify

      - name: Run build
        run: yarn turbo run build --color --concurrency=5

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            packages/**/dist

  pre_release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      # - name: Setup local cache server for Turborepo
      #   uses: felixmosh/turborepo-gh-artifacts@v3
      #   with:
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     server-token: ${{ env.TURBO_TOKEN }}

      - name: Version
        run: yarn workspaces foreach --all --topological version "$(node -e "console.log(require('semver').inc(require('./package.json').version, 'patch'))")-pre.${{ github.run_number }}"

      - name: Build
        run: yarn turbo run build --color --concurrency=5

      - run: git config user.email "info@csaude.org.mz" && git config user.name "C-Sa√∫de CI"
      - run: git add . && git commit -m "Prerelease version" --no-verify

      - name: Pre-release
        run: yarn config set npmAuthToken "${NODE_AUTH_TOKEN}" && yarn run ci:prepublish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Trigger frontend image build
        run: gh workflow run publish_frontend_snapshot_images.yml -f cache_bust=true -R csaude/openmrs-distro-sesp
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            packages/**/dist
          overwrite: true
  
  # deploy_patient_management:
  #   runs-on: ubuntu-latest

  #   needs: pre_release

  #   if: ${{ github.event_name == 'push' }}

  #   steps:
  #     - name: Trigger RefApp Build
  #       uses: fjogeleit/http-request-action@master
  #       with:
  #         url: https://ci.openmrs.org/rest/api/latest/queue/REFAPP-D3X
  #         method: "POST"
  #         customHeaders: '{ "Authorization": "Bearer ${{ secrets.BAMBOO_TOKEN }}" }'

  # release:
  #   runs-on: ubuntu-latest

  #   needs: build

  #   if: ${{ github.event_name == 'release' }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "16.15"
  #         registry-url: "https://registry.npmjs.org"

  #     - name: Cache dependencies
  #       id: cache
  #       uses: actions/cache@v3
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

  #     - name: Install dependencies
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: yarn install --immutable

  #     - run: yarn turbo run build --color
  #     - run: yarn run ci:publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
